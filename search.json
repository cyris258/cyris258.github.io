[{"title":"底层const和顶层const","url":"/2025/03/03/底层const和顶层const/","content":"\n\n\n\n\n\n\n\n\n### 1. `int const* ptr` 或 `const int* ptr`\n\n- **顶层 `const`**：`ptr` 是一个指向 `const int` 的指针，`const` 位于类型（`int`）后面，表示指针指向的内容是常量，即**底层 `const`**。\n\n- **底层 `const`**：指针 `ptr` 本身是可以修改的，所以这里没有顶层 `const`。\n\n  **总结**：\n\n  - **顶层 `const`**：无\n  - **底层 `const`**：指向的 `int` 值是常量。\n\n### 2. `int* const ptr`\n\n- **顶层 `const`**：`ptr` 是常量指针，`const` 位于指针（`ptr`）后面，表示指针本身是常量，**不能修改**指向的地址。即**顶层 `const`**。\n\n- **底层 `const`**：指针指向的对象是普通的 `int`，可以修改。\n\n  **总结**：\n\n  - **顶层 `const`**：指针 `ptr` 是常量，不能修改指向的地址。\n  - **底层 `const`**：无，指向的 `int` 值是可以修改的。\n\n### 3. `const int* const ptr`\n\n- **顶层 `const`**：`ptr` 是常量指针，`const` 位于指针（`ptr`）后面，表示指针本身是常量，即**顶层 `const`**。\n\n- **底层 `const`**：指针指向的对象是 `const int`，表示指向的 `int` 值是常量，即**底层 `const`**。\n\n  **总结**：\n\n  - **顶层 `const`**：指针 `ptr` 是常量，不能修改指向的地址。\n  - **底层 `const`**：指向的 `int` 值是常量。\n\n例子：\n\n\n```c++\n//const int* val 和 int const* val：底层 const，指针可以修改，指向的值不能修改但可以通过其他方法修改。\n// int* const val：顶层 const，指针不能修改，指向的值可以修改。\n// const int* const val：顶层和底层 const，指针和指向的值都不能修改。\nint val = 10;\n    int val2 = 100;\n    int const* valp1 = &val; //底层\n    int* const valp2 = &val; //顶层\n\n    const int* valp3 = &val;\n    valp3 = &val2;\n    val = 10000; //底层const 不允许通过*valp3直接修改值，但可以通过直接val的修改其值\n    std::cout << val << \" \" << val2 << \" \" << *valp1 << \" \" << *valp2 << \" \" << std::endl;\n\n    valp1 = &val2;\n    *valp2 = 1000;\n    std::cout << val << \" \" << val2 <<\" \" << *valp1 <<\" \" << *valp2 <<\" \" << std::endl;\n    //结果\n   //1000 100 100 1000\n```\n\n\n\n### 总结的区别：\n\n- **顶层 `const`**：表示指针本身是常量，不能修改指针的指向（即 `ptr` 的值不可改变）。\n- **底层 `const`**：表示指针指向的对象是常量，不能通过指针修改该对象的值（即 `*ptr` 的值不可改变）。\n\n在这四种声明中：\n\n- `int const* ptr` 和 `const int* ptr` 是底层 `const`（指向的内容不可修改），但指针本身是可以修改的。\n- `int* const ptr` 和 `const int* const ptr` 是顶层 `const`（指针本身不可修改），其中 `const int* const ptr` 同时也是底层 `const`（指向的内容不可修改）。"},{"title":"unicode汉字编码","url":"/2024/12/23/unicode汉字编码/","content":"\n\n\n\n\n<!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->\n<dependency>\n    <groupId>com.belerweb</groupId>\n    <artifactId>pinyin4j</artifactId>\n    <version>2.5.1</version>\n</dependency>\n\n\n\n\n\n```java\n//获取汉字拼音首字符\npublic static String getFirst(String string) {\n    char[] chars = string.toCharArray();\n    String r = \"\";\n    for (int i = 0; i < chars.length; i++) {\n        if (String.valueOf(chars[i]).matches(\"[\\u4e00-\\u9fa5]\")) {\n            //为汉字\n            try {\n                HanyuPinyinOutputFormat format = new HanyuPinyinOutputFormat();\n                r += PinyinHelper.toHanyuPinyinStringArray(chars[i], format)[0].substring(0, 1);\n            } catch (BadHanyuPinyinOutputFormatCombination e) {\n                e.printStackTrace();\n            }\n        } else {\n            r += chars[i];\n        }\n    }\n    return r;\n}\n```\n\n\n\n按照代码这边可以匹配 51e5=20902个汉字（unicode中u4e00到u9fa5是常用汉字区间），但实际上应该有9万多。\n\n原因：Unicode 将汉字划分为多个区域，以便更好地组织和编码。这些区域包括：\n\n- **基本区（CJK Unified Ideographs）：\\u4e00 到 \\u9fa5，20902 个字符**\n  包含最常用的汉字，覆盖了中文、日文、韩文中共享的核心字符。\n- **扩展区**：\n  - **扩展 A 区：\\u3400 到 \\u4DBF，约 6592 个字符**\n    收录了一些生僻字和地区性用字。\n  - **扩展 B 区：\\u20000 到 \\u2A6DF，42720 个字符**\n    包括更多的历史汉字和生僻字。\n  - **扩展 C、D、E、F、G 等区域**，这些扩展区域进一步收录了学术研究和特殊领域的汉字，总计超过 9 万个。\n\n\n\n测试：\n\n```java\nString s = \"\";\nfor (int i = 0x3400; i <= 0x4DBF; i++) {\n    if (s.length() <= 10) {\n        s += (char) i;\n    }\n}\nSystem.out.println(\"A区段前十个字符为 ：\" + s);\n```\n\n```\nA区段前十个字符为 ：㐀㐁㐂㐃㐄㐅㐆㐇㐈㐉㐊\n```\n\n感觉知道了点什么但又没什么用，没用的知识点加一。","tags":["编码","字符"]},{"url":"/2024/12/18/hutool工具踩坑/","content":"使用ExcelRead时默认将第一次读到的为表头，数据为空则填充相关列的ABC."},{"url":"/2024/12/18/excel格式设置/","content":"https://www.nnbs.cc/d/14174  参考\n\n\n\n\n\nimport cn.hutool.poi.excel.ExcelUtil;\nimport cn.hutool.poi.excel.ExcelWriter;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Cell;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ExcelExport {\n\n    public static void main(String[] args) {\n        // 模拟数据\n        List<List<String>> rows = new ArrayList<>();\n        rows.add(new ArrayList<String>() {{\n            add(\"ID\");\n            add(\"Name\");\n            add(\"Description\");\n        }});\n        rows.add(new ArrayList<String>() {{\n            add(\"1\");\n            add(\"John Doe\");\n            add(\"A long description that should adjust column width automatically.\");\n        }});\n        rows.add(new ArrayList<String>() {{\n            add(\"2\");\n            add(\"Jane Smith\");\n            add(\"Short desc\");\n        }});\n    \n        // 创建ExcelWriter对象\n        ExcelWriter writer = ExcelUtil.getWriter(\"d:/test.xlsx\");\n    \n        // 模拟表头\n        List<String> headers = new ArrayList<>();\n        headers.add(\"ID\");\n        headers.add(\"Name\");\n        headers.add(\"Description\");\n    \n        // 写入表头\n        writer.writeHeadRow(headers);\n    \n        // 写入数据\n        writer.write(rows);\n    \n        // 获取底层的 Sheet 对象\n        Sheet sheet = writer.getSheet();\n    \n        // 冻结第一行（表头）\n        writer.setFreezePane(1, 0);\n    \n        // 遍历每一列，自适应宽度，优先考虑表头宽度\n        for (int i = 0; i < headers.size(); i++) {\n            sheet.autoSizeColumn(i);  // 让内容列自适应\n    \n            // 获取当前列的最大宽度\n            int currentColumnWidth = sheet.getColumnWidth(i);\n    \n            // 获取表头单元格的宽度\n            Row headerRow = sheet.getRow(0); // 表头在第0行\n            if (headerRow != null) {\n                Cell headerCell = headerRow.getCell(i);\n                if (headerCell != null) {\n                    int headerCellWidth = headerCell.getStringCellValue().length() * 256; // 表头内容的字符数 × 256\n                    if (headerCellWidth > currentColumnWidth) {\n                        sheet.setColumnWidth(i, headerCellWidth); // 如果表头宽度大于当前列宽，使用表头宽度\n                    }\n                }\n            }\n        }\n    \n        // 关闭Writer，释放内存\n        writer.close();\n    }\n}"},{"title":"docx合并单元格失效","url":"/2024/12/18/docx导出时合并单元格失效/","content":"\n\n\n\n\n\n\n\n\n问题就设置单元格值后无法再次获取所设置的值。\n\n```java\n XWPFTableCell cell = (j < row.getTableCells().size()) ? row.getCell(j) : row.createCell();\n cell.setText(\"测试\");//手动写入数据\n String text = cell.getText();//获取到数据为 \"\"\n```\n\n\n\n原因好像是 Apache POI 存在的一种缓存机制，详细代码什么的可以自己看看。\n\n先列出关于表格的层级结构吧：\n\n`XWPFDocument` → `XWPFTable` → `XWPFTableRow` → `XWPFTableCell` → `XWPFParagraph` → `XWPFRun`（最终的文本内容）\n\n在XWPFTableCell 层中修改了text的内容但由于缓存机制导致底层文本并没刷新，原因找到了那就直接在run层修改呗，\n\n```java\n// 手动创建段落和运行，设置文本\nXWPFParagraph cellParagraph = cell.getParagraphs().isEmpty() ? cell.addParagraph() : cell.getParagraphs().get(0);\ncellParagraph.removeRun(0); // 删除旧的 Run（如果存在）\nXWPFRun run = cellParagraph.createRun();\nrun.setText(rowData.get(j)); // 设置文本\n```\n\n表格单元合并成功，目的虽然是合并单元但要修改的是cell，只能说 复杂工具虽然好用但也是挖了一堆坑啊。。","tags":["java","文件"]},{"url":"/2024/12/18/cvs导出格式问题/","content":"name ,sex,power\n--saber,1,qiang\nlancer,2,ruo\n\n主要是 --会被excel工具误识别，需要添加\"=\\\","},{"title":"main执行前不编译整个项目","url":"/2024/12/18/main执行时不编译项目/","content":"\n\n\n\n\n前景提要在git上找了一个学习用的项目，出于自信没运行项目，只是简单看了下代码。感觉一般就没管了，\n\n​\t今天刚好需要一个案例项目记录下案例和错误，把代码移过去后没看到红点，万事大吉直接运行，然后就是一堆编译问题。\n\n基本上都是注解失效导致的，想了下之前有项目也是这样注解失效但清楚缓存后就okl,等了一会缓存清除完毕，启动！\n\n​\t没用？？仔细看了下代码时间，2016年。。包的引入方式也很奇怪，想了下可能是容器没启动的原因（案例项目全是独立的）\n\n想了下正常情况运行自己的案例是不会被其他案例影响的，所以罪魁祸首就是idea提前编译了其他代码，找到原因后就很简单了\n\n在启动配置里面找配置呗，点击确认在运行前不编译xx（Do not build before run）,案例启动！成功\n\n\n\n\n\n\n\n\n\n\n\n![image-20241217175630515](main执行时不编译项目.assets/image-20241217175630515.png)","tags":["idea","技巧"]},{"url":"/2024/12/12/特殊语句总结/"},{"url":"/2024/12/12/特殊查询总结/"},{"title":"压缩文件返回错误","url":"/2024/12/12/下载压缩文件/","content":"\n问题背景：需要直接从本地读取压缩文件并返回\n\n\n\n**controller**\n\n```java\n@GetMapping(\"/download\")\npublic void downloadFile(@RequestParam(\"fileName\") String fileName, HttpServletResponse response) {\n    // 假设文件保存在服务器上的某个目录中\n    String filePath = \"/path/to/your/zip/files/\" + fileName;\n    File file = new File(filePath);\n\n    if (!file.exists()) {\n        try {\n            response.sendError(HttpServletResponse.SC_NOT_FOUND, \"File not found!\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return;\n    }\n\n    // 设置响应头，告诉浏览器这是一个文件下载请求\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"application/x-zip-compressed\");  // 设置文件类型，.zip 文件\n    response.setHeader(\"Content-Disposition\", \"attachment; filename=\" + file.getName());  // 设置下载文件的文件名\n\n    try (FileInputStream fileInputStream = new FileInputStream(file);\n         OutputStream outputStream = response.getOutputStream()) {\n        // 使用 IOUtils.copy 来简化文件流的复制\n        IOUtils.copy(fileInputStream, outputStream);\n        outputStream.flush();  // 确保数据被完全写入到响应中\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n}\n```\n\n踩坑：swagger调用接口报异常 （HttpMediaTypeNotAcceptableException）\n\n客户端请求期望响应的媒体类型与服务器响应的媒体类型不一致,应该是swagger那边返回数据类型错误\n\n最后尝试了下postman没问题草了。\n\n扩展：\n\nrar形式的压缩 contentType : application/octet-stream\n\ns","tags":["web","http"]},{"title":"这些网站不要打开###","url":"/2024/12/04/sese/","content":"\n\n\n新年快乐，没什么礼物就用这个代替啦\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://www.gal123.com/ 导航网站（强烈推荐这个，这就是个网站集合）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://acghgame.com/forum.php   多，杂（3D游戏多）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://bbs.south-plus.org/index.php?  论坛南+，很喜欢，资源全\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://nfacg.moe/  个方面都还凑合\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hentaiplay.net/  在线里番\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://yande.re/post 精品涩图，很喜欢\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.kisssub.org/ 看番网站（需下载）基本上出来的都有（除里番）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.galgamezd.org/bbs/index.php(全就完事了,啥都有,贼强的17年老站)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n上面这些是我用过的感觉还不错的网站\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n下面的是我没用过，别的司机整合的\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n本子:   漫画岛:http://m.wuqudao.com/manhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\np站:https://m.pixivic.com/dailyRank?VNK=2816a36eup\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n喵绅士:https://zh.nyahentai.pro/(这个自我感觉最好)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶派:https://xepai.mhdq8.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n早读ACG:https://m.acgzd.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶的天堂:http://m.xieedetiantang.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶集:http://www.ubr6.com/xieemanhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n二次元福利:https://www.2cyfl.com/(有里番有本子甚至还有鬼父)                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\n看料啦:http://m.kanliaola123.com/html_manhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n少女漫画站:http://sl.xieenvnv.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nACG宝库:https://acgbk3.vip/forum.php?mod=guide&view=hot&mobile=2(需要注册)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n次元酷:https://blog.acgcool.pw/(需要注册)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n无漫网:http://m.wuman1.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n妖气漫画:https://m.yqmh123.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nQQ秀吧:https://m.qqkouw.com/xieemanhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n漫画:http://m.luohuatj.com/html/manhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n大众无翼鸟:http://m.lwyzrcw.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n琉璃神社:http://m.liulishenshe.cc/(本子)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n琉璃神社:http://www.facg.cc/(里番)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n内涵漫画:https://wap.dvw.net/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n图粉帮:http://m.tufenbang.com/mhpic/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶天堂:http://m.xiee22.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n汗汗漫画:http://m.pcpophb.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n少女吧:http://bz8.xeyxi.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n里番漫画:https://m.xeshaonv.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n禁漫天堂：https://18comic.site/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n烈火漫画：https://mhd266.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n无彩翼：http://m.gubeta.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n小黄书:     http://m.11banzhu.org/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n            http://01bz.info/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nAV片:    淫:http://www.yin109.xyz/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n红猫大本营:https://www.264hm.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n飞机馆:https://fj666.me/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n成人论坛:https://avcarsic548.vip/forum.php?mod=guide&view=hot&mobile=2(有点麻烦)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n宅领域:http://www.fuacg.com/(二三次元都有)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n好看动漫:https://m.hkdm688.com/(里番)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n52avav:https://www.14qxqx.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n585jj:https://www.1270h.com/html/18/61920.html(有本子有片)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n撸一撸:http://www.8bc8bc.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ngal 黄油发布网站:忧郁的弟弟:https://beats0.github.io/www.mygalgame.com/page/19/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nACG17:http://www.fuacg.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n终点:https://bbs.zdfx.net/forum.php\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n恋爱游戏网:https://m.lianaiyx.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n《随手转发正能量》\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n我给你整理出了一些不良网站，希望你不要去登录！健康成长\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.55hphp.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.55nana.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.564p.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.5678bbb.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.5kkx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.67by.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.900nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.989xxx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.9henhenlu.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.henhenlulo.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ax76.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.002pp.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.11bbmm.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.20nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.30nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.311kk.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.33seqing.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.99seqing.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.400nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.456rh.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.500nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.5iwin7.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.66seqing.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.678bbmm.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.6kkx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.700nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.70pipi.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.789LL.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.818ee.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.bbmmkxw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.41kxw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.qss555.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ri7.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.rrrr77.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.rrr521.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sehen9.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.selangba.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sss321.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sx94sx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.se94se.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.tmmiao.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.wuyuelu.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.yeyelu.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.youjizz.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.gegequ.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ggg50.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.luse0.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.mayalike.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sao56.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.shij5.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.zzzz5.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.caoganma.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ddd06.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.duotedy5.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.fff00.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.cao2cao.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ff1ff.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.gegegan.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ke3ke.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.manmanshe.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.mi3mi.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ni3ni.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.pi3pi.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.001ii.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.06ye.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.0aiai.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.11f11.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.15y15.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.17n17.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.2koko.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.3355h.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.55i55.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.8e6e.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.500xxxx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.d9vod.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ccc64.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ppp36.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.zp30.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.40bw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.50bw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.50yt.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.70yt.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.000rr.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.bobo.sasa33.net\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ppp36.net\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.93p.us\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.se55.org\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.4z1s.info\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.bo79.info\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.se55.info .sbkuaibo2.us\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n网站里番:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hanime1.me/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://members.hanime.tv/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://animeidhentai.com/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://hentaigasm.com/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hentaimama.io/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://www.underhentai.net/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://ohentai.org/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hentaifreak.org/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n（需VPN）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n游戏:https://bestporngames.com（需VPN）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n真人:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://m.kpd227.me/        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\nxvideos.com   （需VPN）    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\navbebe.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n喵绅士动漫本子:https://zha.ddhentai.com/（需VPN）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nacg次元网:777acg.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n禁漫天堂:https://18comic.org\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nUZXun论坛:http://www.uzxun.run/\t\t\n\n![227125](/image/35246.jpg)\n\n![46236](sese.assets/46236.jpg)\t\t\t\t\t\t\t\t\t","tags":["网站","涩涩"]},{"title":"jenkins实践","url":"/2024/12/04/jenkins/","content":"\n\n\n\n\n安装jenkins 下载war包并启动，浏览器输入地址端口为启动时输入的\n\n插件安装 ：manage jenkins -> manage plugin\n\n远程操作：\n\n​\t配置依赖 \n\n\t<!-- https://mvnrepository.com/artifact/com.offbytwo.jenkins/jenkins-client -->\n<dependency>\n    <groupId>com.offbytwo.jenkins</groupId>\n    <artifactId>jenkins-client</artifactId>\n    <version>0.3.8</version>\n</dependency>\n\n参考代码：\n\n```java\n // 连接 Jenkins\n    JenkinsServer jenkins = new JenkinsServer(new URI(\"http://your-jenkins-url\"), \"your-username\", \"your-api-token\");\n\n    // Job 名称\n    String jobName = \"complex-project-deployment\";\n\n    // Pipeline XML 配置\n    String jobConfigXml = \"<flow-definition plugin=\\\"workflow-job@2.42\\\">\\n\" +\n            \"  <actions/>\\n\" +\n            \"  <description>A complete example for project deployment</description>\\n\" +\n            \"  <keepDependencies>false</keepDependencies>\\n\" +\n            \"  <properties>\\n\" +\n            \"    <hudson.model.ParametersDefinitionProperty>\\n\" +\n            \"      <parameterDefinitions>\\n\" +\n            \"        <hudson.model.StringParameterDefinition>\\n\" +\n            \"          <name>BRANCH</name>\\n\" +\n            \"          <description>Branch to build</description>\\n\" +\n            \"          <defaultValue>main</defaultValue>\\n\" +\n            \"        </hudson.model.StringParameterDefinition>\\n\" +\n            \"        <hudson.model.StringParameterDefinition>\\n\" +\n            \"          <name>ENVIRONMENT</name>\\n\" +\n            \"          <description>Deployment environment</description>\\n\" +\n            \"          <defaultValue>production</defaultValue>\\n\" +\n            \"        </hudson.model.StringParameterDefinition>\\n\" +\n            \"      </parameterDefinitions>\\n\" +\n            \"    </hudson.model.ParametersDefinitionProperty>\\n\" +\n            \"  </properties>\\n\" +\n            \"  <definition class=\\\"org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition\\\" plugin=\\\"workflow-cps@2.94\\\">\\n\" +\n            \"    <script>\\n\" +\n            \"      pipeline {\\n\" +\n            \"        agent any\\n\" +\n            \"        environment {\\n\" +\n            \"          MAVEN_HOME = '/path/to/maven'\\n\" +\n            \"          DEPLOY_SERVER = 'user@remote-server'\\n\" +\n            \"        }\\n\" +\n            \"        parameters {\\n\" +\n            \"          string(name: 'BRANCH', defaultValue: 'main', description: 'Branch to build')\\n\" +\n            \"          string(name: 'ENVIRONMENT', defaultValue: 'production', description: 'Deployment environment')\\n\" +\n            \"        }\\n\" +\n            \"        stages {\\n\" +\n            \"          stage('Checkout') {\\n\" +\n            \"            steps {\\n\" +\n            \"              git branch: \\\"${params.BRANCH}\\\", url: 'https://github.com/your-repo-url.git'\\n\" +\n            \"            }\\n\" +\n            \"          }\\n\" +\n            \"          stage('Build') {\\n\" +\n            \"            steps {\\n\" +\n            \"              sh '''\\n\" +\n            \"              ${MAVEN_HOME}/bin/mvn clean package\\n\" +\n            \"              '''\\n\" +\n            \"            }\\n\" +\n            \"          }\\n\" +\n            \"          stage('Test') {\\n\" +\n            \"            steps {\\n\" +\n            \"              sh '''\\n\" +\n            \"              ${MAVEN_HOME}/bin/mvn test\\n\" +\n            \"              '''\\n\" +\n            \"            }\\n\" +\n            \"          }\\n\" +\n            \"          stage('Archive') {\\n\" +\n            \"            steps {\\n\" +\n            \"              archiveArtifacts artifacts: 'target/*.jar', fingerprint: true\\n\" +\n            \"            }\\n\" +\n            \"          }\\n\" +\n            \"          stage('Deploy') {\\n\" +\n            \"            steps {\\n\" +\n            \"              sshPublisher(\\n\" +\n            \"                publishers: [\\n\" +\n            \"                  sshPublisherDesc(\\n\" +\n            \"                    configName: 'RemoteServer',\\n\" +\n            \"                    transfers: [\\n\" +\n            \"                      sshTransfer(\\n\" +\n            \"                        sourceFiles: 'target/*.jar',\\n\" +\n            \"                        remoteDirectory: '/path/to/deploy',\\n\" +\n            \"                        removePrefix: 'target'\\n\" +\n            \"                      )\\n\" +\n            \"                    ],\\n\" +\n            \"                    usePromotionTimestamp: false,\\n\" +\n            \"                    useWorkspaceInPromotion: false\\n\" +\n            \"                  )\\n\" +\n            \"                ]\\n\" +\n            \"              )\\n\" +\n            \"            }\\n\" +\n            \"          }\\n\" +\n            \"        }\\n\" +\n            \"        post {\\n\" +\n            \"          always {\\n\" +\n            \"            emailext(\\n\" +\n            \"              to: 'your-email@example.com',\\n\" +\n            \"              subject: \\\"Build: ${currentBuild.fullDisplayName}\\\",\\n\" +\n            \"              body: \\\"Status: ${currentBuild.result}\\\\nBuild URL: ${env.BUILD_URL}\\\"\\n\" +\n            \"            )\\n\" +\n            \"          }\\n\" +\n            \"        }\\n\" +\n            \"      }\\n\" +\n            \"    </script>\\n\" +\n            \"    <sandbox>true</sandbox>\\n\" +\n            \"  </definition>\\n\" +\n            \"  <triggers/>\\n\" +\n            \"</flow-definition>\";\n\n    // 创建或更新 Job\n    if (jenkins.getJob(jobName) != null) {\n        jenkins.updateJob(jobName, jobConfigXml);\n        System.out.println(\"Job updated successfully!\");\n    } else {\n        //true覆盖重名的\n        jenkins.createJob(jobName, jobConfigXml, true);\n        System.out.println(\"Job created successfully!\");\n    }\n}\n```\n\n相关配置有三种模式：\n\n1.freestyle 特征 <project>\n\n2.maven   特征  <maven>\n\n3.flow   特征   <flow>\n\n踩坑：\n\n​\t多git配置需要下载插件，也可以写脚本\n\n​\t缺少依赖就按照提示一个一个添加\n\n1、关闭Jenkins  https://gitlab.com/firstgroup2644947/cyis.green.ty.be.git\n\n     只需要在访问jenkins服务器的网址url地址后加上exit。例如我jenkins的地址http://127.0.0.1:8080/，那么我只需要在浏览器地址栏上敲下http://127.0.0.1:8080/exit 网址就能关闭jenkins服务.\n\n \n\n\n\n2、重启Jenkies\n\n    http://127.0.0.1:8080/restart\n\n \n\n\n\n3、重新加载配置信息\n\n    http://127.0.0.1:8080/reload","tags":["技术","jenkins"]},{"title":"linux开启apache服务","url":"/2024/12/04/apache服务/","content":"\n\n\n\n\n\n\n安装\n\nyum install httpd -y\n\n启动\n\nsystemctl start httpd\n\n​\t启动失败：\n\n​\t\t原因：“安全增强型 Linux（Security-Enhanced Linux）”，简称 SELinux，它是 Linux 的一个安全子系统开启了\n\n​\t\t解决方案：\n\n​\t\t\t临时：setenforce 0 ，临时关闭安全系统\n\n​\t\t\t永久：cd /etc/selinux/  修改conf文件===>SELINUX=enforcing改为SELINUX=disabled\n\n​\t启动成功：\n\n​\t\t无法访问页面：\n\n​\t\t\t原因：开启了firewalld\n\n​\t\t\t解决：sudo firewall-cmd --permanent --add-service=http  允许http请求\n\n​\t\t\t\t\t\tsudo firewall-cmd --permanent --add-service=https 允许https请求\n\n​\t\t\t\t\t\tfirewall-cmd --zone=public --add-port=8099/tcp --permanent 允许8099端口\n\n​\t\t\t\t\t\tsudo firewall-cmd --reload  重新加载规则\n\n​\t\t成功访问\n\n设置为开机自启\n\nsystemctl enable httpd\n\n​\t\n\n","tags":["linux","apache"]},{"title":"索引失效问题","url":"/2024/12/03/索引失效/","content":"\n\n\n\n\n1.在使用 `LIKE` 操作符进行模糊匹配时，如果模式开头使用通配符 `%`，例如 `%d%`，通常情况下数据库无法有效使用索引。因为索引通常只能优化前缀匹配，而不是后缀匹配或包含匹配。\n\n\n\n2.最左前缀法则，针对联合索引。\n\n比如有个索引 idx（A,B,C）\n\n查询中有 where A=XX  AND B=XX AND C=XX, 索引可以全部用到\n\n​\t\t        WHERE A=XX AND C=XX     只能用到 A\n\n​                WHERE B=XX    都用不到\n\n\n\n3.针对用 or 连接的 字段，如果有一个无索引那就会全部失效\n\nwhere A =XX OR B=XX ,其中A有索引，B无索引，他们之间用OR 连接那索就会失效。","tags":["技术","mysql","索引"]},{"url":"/2024/12/03/数据迁移/","content":"navicat上有个工具菜单数据传输的功能"},{"url":"/2024/12/03/大量插入数据/","content":"使用mysql的load指令"},{"title":"数据库表合并","url":"/2024/12/03/合并表/","content":"\n\n\n\n\nCREATE TABLE `a` (\n  `id` int NOT NULL,\n  `x` varchar(255) NOT NULL,\n  `y` varchar(255) NOT NULL,\n  `z` varchar(255) NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n\n\n\nCREATE TABLE `b` (\n  `id` int NOT NULL,\n  `data` blob NOT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n\n\n\n合并操作\n\nINSERT INTO a_b ( X, Y, Z, DATA ) SELECT\na.x,\na.y,\na.z,\nb.`data` \nFROM\n\ta\n\tLEFT JOIN b ON a.id = b.id;\n\n\n\n数据量很大可以先将部分数据导出\n\nINSERT INTO a_b ( X, Y, Z, DATA ) SELECT\na.x,\na.y,\na.z,\nb.`data` \nFROM\n\ta\n\tLEFT JOIN b ON a.id = b.id WHERE a.id BETWEEN 1 AND 3;","tags":["技术","mysql"]},{"title":"sql查询优化","url":"/2024/12/03/优化查询/","content":"\n\n\n\n\n#开启索引\n\n一张表有且仅有一个聚集索引，这个和数据存储有关，没有不能存数据，具体原因是mysql的innodb引擎使用b+树的方式存储数据，每个节点相当于一页（一页为16k），储存数据时要根据聚集索引来存储数据。\n\n\n\n#针对全系统查看那个语句的使用频次高，然后据此优化\nSHOW GLOBAL STATUS LIKE 'Com_______';\nSHOW GLOBAL STATUS LIKE 'Com_select';\nSHOW GLOBAL STATUS LIKE 'Com_insert';\nSHOW GLOBAL STATUS LIKE 'Com_update';\nSHOW GLOBAL STATUS LIKE 'Com_delete';\n\n#检测开启慢查询，针对某个符合慢查询的语句进行优化\nSHOW VARIABLES LIKE 'slow_query_log';\nSHOW VARIABLES LIKE 'slow_query_log_file';\nSHOW VARIABLES LIKE 'long_query_time';\n\n\n\n#展示当前会话的所有查询\nSHOW PROFILES;\n\n#查看特定查询的耗时\nSHOW PROFILE FOR QUERY 26;\n\n#查看cpu\nSHOW profile cpu FOR QUERY 26;\n\n\n\n\n\n还有一个**explain** ，这个放在语句前执行可以看到其执行过程\n\n`EXPLAIN` 提供的信息包括但不限于以下几个关键部分：\n\n1. **id**：查询的标识符，用于标识查询中不同的查询步骤。\n2. **select_type**：查询的类型，常见的有 `SIMPLE`（简单查询）、`JOIN`（连接查询）、`SUBQUERY`（子查询）等。\n3. **table**：查询涉及的表。\n4. **partitions**：使用的分区信息。\n5. **type**：访问类型，表示数据库使用了哪种方式来获取数据，常见的类型有：\n   - `ALL`：全表扫描，表示没有使用索引，会遍历整张表。\n   - `index`：索引全扫描，表示使用了索引来扫描表。\n   - `range`：索引范围扫描，表示使用了索引的一部分。\n   - `ref`：单表连接查询。\n   - `eq_ref`：唯一索引查找。\n   - `const`：常数查询，表示使用主键或唯一索引的单行查询。\n6. **possible_keys**：可能使用的索引列表。\n7. **key**：实际使用的索引。\n8. **key_len**：索引使用的长度。\n9. **ref**：显示索引如何被使用，通常是指显示索引与哪些列或常数值进行比较。\n10. **rows**：估计的要检查的行数。\n11. **filtered**：按表访问条件过滤的行百分比。\n12. **Extra**：附加信息，包含了关于查询优化过程的额外信息。\n\n### 解释查询执行计划的过程\n\n通过查看 `EXPLAIN` 的输出，可以理解以下几个方面：\n\n- **查询优化**：了解数据库优化器如何选择执行计划，选择合适的索引和连接策略。\n- **性能瓶颈**：识别查询中潜在的性能问题，例如全表扫描或索引未命中的情况。\n- **索引使用**：确认查询是否有效地利用了索引来加快数据检索。\n- **连接方式**：理解查询中涉及的表之间的连接方式，如何执行连接操作。\n\n\n\n当字段为varchar或者text时可以根据情况创建前缀索引","tags":["技术","mysql"]},{"title":"这些网站不要打开###","url":"/2024/12/02/色色/","content":"\n\n\n新年快乐，没什么礼物就用这个代替啦\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://www.gal123.com/ 导航网站（强烈推荐这个，这就是个网站集合）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://acghgame.com/forum.php   多，杂（3D游戏多）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://bbs.south-plus.org/index.php?  论坛南+，很喜欢，资源全\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://nfacg.moe/  个方面都还凑合\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hentaiplay.net/  在线里番\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://yande.re/post 精品涩图，很喜欢\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.kisssub.org/ 看番网站（需下载）基本上出来的都有（除里番）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.galgamezd.org/bbs/index.php(全就完事了,啥都有,贼强的17年老站)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n上面这些是我用过的感觉还不错的网站\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n下面的是我没用过，别的司机整合的\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n本子:   漫画岛:http://m.wuqudao.com/manhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\np站:https://m.pixivic.com/dailyRank?VNK=2816a36eup\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n喵绅士:https://zh.nyahentai.pro/(这个自我感觉最好)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶派:https://xepai.mhdq8.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n早读ACG:https://m.acgzd.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶的天堂:http://m.xieedetiantang.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶集:http://www.ubr6.com/xieemanhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n二次元福利:https://www.2cyfl.com/(有里番有本子甚至还有鬼父)                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\n看料啦:http://m.kanliaola123.com/html_manhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n少女漫画站:http://sl.xieenvnv.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nACG宝库:https://acgbk3.vip/forum.php?mod=guide&view=hot&mobile=2(需要注册)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n次元酷:https://blog.acgcool.pw/(需要注册)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n无漫网:http://m.wuman1.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n妖气漫画:https://m.yqmh123.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nQQ秀吧:https://m.qqkouw.com/xieemanhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n漫画:http://m.luohuatj.com/html/manhua/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n大众无翼鸟:http://m.lwyzrcw.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n琉璃神社:http://m.liulishenshe.cc/(本子)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n琉璃神社:http://www.facg.cc/(里番)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n内涵漫画:https://wap.dvw.net/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n图粉帮:http://m.tufenbang.com/mhpic/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n邪恶天堂:http://m.xiee22.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n汗汗漫画:http://m.pcpophb.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n少女吧:http://bz8.xeyxi.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n里番漫画:https://m.xeshaonv.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n禁漫天堂：https://18comic.site/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n烈火漫画：https://mhd266.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n无彩翼：http://m.gubeta.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n小黄书:     http://m.11banzhu.org/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n            http://01bz.info/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nAV片:    淫:http://www.yin109.xyz/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n红猫大本营:https://www.264hm.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n飞机馆:https://fj666.me/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n成人论坛:https://avcarsic548.vip/forum.php?mod=guide&view=hot&mobile=2(有点麻烦)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n宅领域:http://www.fuacg.com/(二三次元都有)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n好看动漫:https://m.hkdm688.com/(里番)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n52avav:https://www.14qxqx.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n585jj:https://www.1270h.com/html/18/61920.html(有本子有片)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n撸一撸:http://www.8bc8bc.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ngal 黄油发布网站:忧郁的弟弟:https://beats0.github.io/www.mygalgame.com/page/19/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nACG17:http://www.fuacg.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n终点:https://bbs.zdfx.net/forum.php\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n恋爱游戏网:https://m.lianaiyx.com/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n《随手转发正能量》\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n我给你整理出了一些不良网站，希望你不要去登录！健康成长\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.55hphp.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.55nana.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.564p.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.5678bbb.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.5kkx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.67by.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.900nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.989xxx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.9henhenlu.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.henhenlulo.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ax76.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.002pp.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.11bbmm.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.20nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.30nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.311kk.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.33seqing.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.99seqing.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.400nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.456rh.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.500nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.5iwin7.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.66seqing.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.678bbmm.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.6kkx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.700nnn.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.70pipi.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.789LL.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.818ee.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.bbmmkxw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.41kxw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.qss555.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ri7.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.rrrr77.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.rrr521.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sehen9.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.selangba.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sss321.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sx94sx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.se94se.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.tmmiao.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.wuyuelu.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.yeyelu.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.youjizz.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.gegequ.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ggg50.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.luse0.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.mayalike.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.sao56.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.shij5.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.zzzz5.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.caoganma.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ddd06.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.duotedy5.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.fff00.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.cao2cao.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ff1ff.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.gegegan.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ke3ke.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.manmanshe.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.mi3mi.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ni3ni.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.pi3pi.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.001ii.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.06ye.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.0aiai.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.11f11.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.15y15.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.17n17.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.2koko.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.3355h.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.55i55.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.8e6e.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.500xxxx.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.d9vod.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ccc64.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ppp36.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.zp30.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.40bw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.50bw.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.50yt.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.70yt.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.000rr.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.bobo.sasa33.net\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.ppp36.net\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.93p.us\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.se55.org\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.4z1s.info\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.bo79.info\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://www.se55.info .sbkuaibo2.us\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n网站里番:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hanime1.me/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://members.hanime.tv/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://animeidhentai.com/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://hentaigasm.com/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hentaimama.io/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://www.underhentai.net/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://ohentai.org/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttps://hentaifreak.org/?ref=porndude\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n（需VPN）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n游戏:https://bestporngames.com（需VPN）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n真人:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nhttp://m.kpd227.me/        \t\t\t\t\t\t\t\t\t\t\t\t\t\t\nxvideos.com   （需VPN）    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\navbebe.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n喵绅士动漫本子:https://zha.ddhentai.com/（需VPN）\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nacg次元网:777acg.com\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n禁漫天堂:https://18comic.org\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nUZXun论坛:http://www.uzxun.run/\t\t\n\n![227125](/image/35246.jpg)\n\n\n\n![192749](色色.assets/192749.gif)\n\n​\t\t\t\t\t\t\t\t\t\t\t\t","tags":["网站","涩涩"]},{"url":"/2024/12/02/远程创建gitlab项目/","content":"环境：gitLab\n\n准备：\n\n​\t地址：https://gitlab.com/\n\n​\t账号：nar941502@gmail.com\n\n​\t密码：19492001416dc\n\n​\t私人token：（获取流程：点击用户头像 -> edit profile -> access token）\n\n\n\n参考代码：\n\n```java\nimport com_gitlib_t.dto.GitLabProjectRequest;\nimport org.springframework.stereotype.Service;\n\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.OutputStream;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\n\n@Service\npublic class GitLabService {\n\n\n    /**\n     *\n     * authenticity_token: QnWA- 4yTm0QasqxQmpVX4Tyd12k0vxTEQfGxCFw7gzlrAGnd70oTK3PnKOFAxKgF8qR_SO45Sc2MhohdxHa_0A\n     * project[ci_cd_only]: false\n     * project[name]: asdsdad\n     * project[selected_namespace_id]: 97876156\n     * project[namespace_id]: 97876156\n     * project[path]: asdsdad\n     * project[visibility_level]: 0\n     *project[initialize_with_readme]: 1\n     *\n     *\n     * {\n     *     \"name\": \"saber\",\n     *     \"path\": \"saber-project\",\n     *     \"description\": \"descssss\",\n     *     \"visibility\": \"private\",\n     *     \"namespace_id\": 97876156,\n     *     \"initialize_with_readme\": true\n     * }\n     *\n     *\n     */\n    //QnWA-4yTm0QasqxQmpVX4Tyd12k0vxTEQfGxCFw7gzlrAGnd70oTK3PnKOFAxKgF8qR_SO45Sc2MhohdxHa_0A\n    private static final String GITLAB_API_URL = \"https://gitlab.com/api/v4/projects\"; \n    private static final String PERSONAL_ACCESS_TOKEN = \"glpat-_v8QqzssgTJg_w298K4M\"; // 替换为你的访问令牌\n\n    public static void main(String[] args) {\n        try {\n            URL url = new URL(GITLAB_API_URL);\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n            connection.setRequestMethod(\"POST\");\n            connection.setRequestProperty(\"Content-Type\", \"application/json\");\n            connection.setRequestProperty(\"Authorization\", \"Bearer \" + PERSONAL_ACCESS_TOKEN);\n            connection.setDoOutput(true);\n\n            String jsonInputString = String.format(\n                    \"{\" +\n                            \"\\\"name\\\": \\\"%s\\\",\" +\n                            \"\\\"description\\\": \\\"%s\\\",\" +\n                            \"\\\"visibility\\\": \\\"%s\\\",\" +\n                            \"\\\"namespace_id\\\": %d\" +\n                            \"}\",\n                    \"saber\", \"descssss\", \"private\", 97876156\n            );\n\n            try (OutputStream os = connection.getOutputStream()) {\n                byte[] input = jsonInputString.getBytes(\"utf-8\");\n                os.write(input, 0, input.length);\n            }\n\n            int responseCode = connection.getResponseCode();\n            System.out.println(\"Response Code: \" + responseCode);\n\n            if (responseCode == HttpURLConnection.HTTP_CREATED) {\n                System.out.println(\"Project created successfully!\");\n            } else {\n                // Print error response content for better debugging\n                try (InputStream errorStream = connection.getErrorStream()) {\n                    BufferedReader br = new BufferedReader(new InputStreamReader(errorStream, \"utf-8\"));\n                    StringBuilder response = new StringBuilder();\n                    String responseLine;\n                    while ((responseLine = br.readLine()) != null) {\n                        response.append(responseLine.trim());\n                    }\n                    System.err.println(\"Error Response: \" + response.toString());\n                }\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n```\n\n踩坑：\n\n1.connection 在调用 getOutputStream() 前需要 先设置  connection.setDoOutput(true);\n\n原因：`HttpURLConnection` 默认不允许写入数据\n\n2.请求体设置错误，字段没对应上，分组id 应该是 namespace_id"},{"title":"原生http创建jenkins","url":"/2024/12/02/原生http创建jenkins/","content":"\n\n\n\n\n\n\n\n\n\n\n\n\n参考代码\n\n```java\nString IP = \"192.168.204.132\";\nString PORT = \"8088\";\nString VIEW_NAME = \"VIEW_NAME\";\nString JOB_NAME = \"JOB_NAME\";\nString userName = \"JOB_NAME\";\nString TOKEN = \"TOKEN\";\nString CONFIG_XML=\"CONFIG_XML\";\nString URL = \"http://\" + IP + \":\" + PORT + \"/view/\" + VIEW_NAME + \"/createItem?name=\" + JOB_NAME;\nHttpRequest httpRequest = HttpUtil.createPost(URL);\nhttpRequest.header(Header.AUTHORIZATION, \"basic \" + Base64.encode(userName + \":\" + TOKEN));\nhttpRequest.body(CONFIG_XML);\nString responseBody = httpRequest.execute().body();\n```\n\n\n\n其中所需依赖为\n\n```java\nimport cn.hutool.core.codec.Base64;\nimport cn.hutool.http.Header;\nimport cn.hutool.http.HttpRequest;\nimport cn.hutool.http.HttpUtil;\n```\n\n其中CONFIG_XML 参考 jenkins文章 下的jobConfigXml，其余参数为实际值","tags":["技术","jenkins","http"]},{"title":"git bash连接外网失败","url":"/2024/11/29/git bash无法连接外网/","content":"\n\n\n\n\n\n找到自己的代理端口，一般是 7890\n\n\n\n然后执行以下命令：\n\n```cmd\ngit config --global http.proxy http://127.0.0.1:7890\ngit config --global https.proxy http://127.0.0.1:7890\n```\n\n","tags":["网络","代理"]},{"title":"sqlite转mysql","url":"/2024/11/29/sqlite转mysql/","content":"\n\n\n\n\n第一步：\n\n将sqlites的结构和数据导出为sql文件\n\n第二步：\n\n替换 \" 为 ` , text 为 varchar , integer 为 INTRGER \n\n在头部 删除PRAGMA foreign_keys = false;  添加SET NAMES utf6mb4; SET FOREGIN_KEYS_CHECKS=0;\n\n最后位置 删除PRAGMA foreign_keys = true; 添加 SET FOREGIN_KEYS_CHECKS=1;\n\n第三步：\n\n将修改好的文件导入执行\n\n\n\n待解决问题：\n\n1.  有数据超出范围\n\n   原因：\n\n   | 类型    | 数据库           | 范围                                                      |\n   | ------- | ---------------- | --------------------------------------------------------- |\n   | INTEGER | MySQL (SIGNED)   | -2,147,483,648` 到 `2,147,483,647                         |\n   | INTEGER | MySQL (UNSIGNED) | 0` 到 `4,294,967,295                                      |\n   | INTEGER | SQLite           | -9,223,372,036,854,775,808` 到 `9,223,372,036,854,775,807 |\n\n   其他资料：\n\n   MySQL 的 `INTEGER` 是 4 字节，范围相对较小（`SIGNED` 范围从 `-2.1B` 到 `2.1B`，`UNSIGNED` 范围从 `0` 到 `4.3B`）。SQLite 的 `INTEGER` 是动态长度的，最大可以表示 64 位整数。\n\n   **存储方式**：SQLite 根据数值大小动态分配存储空间，而 MySQL 则是固定大小的（`INT` 4 字节）。\n\n   **无符号整数**：MySQL 支持 `UNSIGNED` 类型，可以存储更大的正整数，而 SQLite 不支持无符号整数。","tags":["技术","数据库"]},{"url":"/2024/11/29/项目分解为多个项目的加载问题/","content":"\n\n"},{"title":"书签快捷键","url":"/2024/11/29/快捷键/","content":"\n\n\n\n\nctrl fn11 标记书签\n\nshift fn11 查看所有书签\n\nctrl + alt +t 常见语句 if else try catch ","tags":["技术","idea"]},{"title":"接口返回类型最好是 void","url":"/2024/11/29/导出excel/","content":"\n# **接口返回类型最好是 void** \n\n在这个特定的情况下，如果 `exportAzurExcel` 方法返回其他类型（如 `String`、`Object`、或 `ResponseEntity`），将对方法的设计和调用方式产生影响。以下是一些常见的返回类型及其影响：\n\n1. **返回 `String`**:\n\n   - **影响**: 返回 `String` 通常用于返回视图名称或简单的文本响应。这会改变方法的语义，使得调用者期望接收一个字符串而不是下载文件。\n\n   - 示例\n\n     :\n\n     ```\n     java复制代码@GetMapping(\"/exportAzurExcel\")\n     @ApiModelProperty(\"下载舰娘excel模板文件\")\n     public String exportAzurExcel(HttpServletResponse response) {\n         azKantaiService.exportAzurExcel(response);\n         return \"success\";\n     }\n     ```\n\n   - **结果**: 客户端可能会收到 `success` 字符串，而不是期望的文件下载。\n\n2. **返回 `Object`**:\n\n   - **影响**: 返回 `Object` 适用于返回任意类型的数据。这通常用于 RESTful API 返回 JSON 数据，但在文件下载的情况下不合适。\n\n   - 示例\n\n     :\n\n     ```\n     java复制代码@GetMapping(\"/exportAzurExcel\")\n     @ApiModelProperty(\"下载舰娘excel模板文件\")\n     public Object exportAzurExcel(HttpServletResponse response) {\n         azKantaiService.exportAzurExcel(response);\n         return new Object(); // 实际返回值没有意义\n     }\n     ```\n\n   - **结果**: 客户端收到一个无意义的对象，而不是文件。\n\n3. **返回 `ResponseEntity`**:\n\n   - **影响**: `ResponseEntity` 可以更灵活地控制 HTTP 响应，包括设置状态码和响应头。对于文件下载，这种方法是可行的，但与直接通过 `HttpServletResponse` 写入文件相比并没有明显优势。\n\n   - 示例\n\n     :\n\n     ```\n     java复制代码@GetMapping(\"/exportAzurExcel\")\n     @ApiModelProperty(\"下载舰娘excel模板文件\")\n     public ResponseEntity<Void> exportAzurExcel(HttpServletResponse response) {\n         azKantaiService.exportAzurExcel(response);\n         return ResponseEntity.ok().build();\n     }\n     ```\n\n   - **结果**: 文件下载成功，响应状态码为 200，但方法设计变得复杂。\n\n4. **返回 `void`**:\n\n   - **影响**: 返回 `void` 是最适合这种情况的，因为方法的主要目的是通过响应流输出文件，而不需要返回任何数据。\n\n   - 示例\n\n     :\n\n     ```\n     java复制代码@GetMapping(\"/exportAzurExcel\")\n     @ApiModelProperty(\"下载舰娘excel模板文件\")\n     public void exportAzurExcel(HttpServletResponse response) {\n         azKantaiService.exportAzurExcel(response);\n     }\n     ```\n\n   - **结果**: 文件下载成功，没有多余的返回值，方法设计清晰简洁。\n\n\n\n具体实现\n\n```java\n  try (InputStream inputStream = new ClassPathResource(\"templates/SHIP.xlsx\").getInputStream();\n             OutputStream outputStream = response.getOutputStream()) {\n            response.setCharacterEncoding(\"utf-8\");\n            response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n            String fileName = URLEncoder.encode(\"项目导入模板\", \"UTF-8\").replaceAll(\"\\\\+\", \"%20\");\n            response.setHeader(\"Content-disposition\", \"attachment;filename*=utf-8''\" + fileName + \".xlsx\");\n            IOUtils.copy(inputStream, outputStream);\n        } catch (IOException e) {\n            e.printStackTrace();\n//            Preconditions.interrupt(\"模板下载失败: \" + e.getMessage());\n        }\n```","tags":["技术"],"categories":["编程","工具开发"]},{"title":"maven打包","url":"/2024/11/29/多模块打包事项/","content":"\n\n\n\n\n\n\n## 针对maven\n\n更改jdk版本为项目所需{\n\n高级系统设置->环境变量->修改\"JAVA_HOME\"的值为对应版本（事先准备了多个版本）\n\n} \n\n## 打包命令：mvn clean package\n\n![image-20231201172104059](C:\\Users\\nar94\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231201172104059.png)\n\n父模块管理然后打包  jar包在target目录下\n\n## 启动 选择对应版本的java.exe\n\n命令：xxx/xxx/xxx/java -jar xxx.jar\n\n也可以用脚本启动\n\n\n\n\n\n----------------------------------------分割线--------------------------------------------------\n\n\n\n现在直接用maven插件，先打包然后下载在本地（给其他需要的包提供依赖）\n","tags":["技术"]},{"title":"包名规范","url":"/2024/11/29/包名/","content":"\n\n\n不能以数字开头，比如com.xxx.web.123。\n\n","tags":["技术","命名"]},{"title":"优雅判断重名","url":"/2024/11/29/判断重名/","content":"\n\n\n\n\n\n\n优雅的判断重名\n\n\n\n```java\nAzKantaiEntity one = this.getBaseMapper().selectOne(new LambdaQueryWrapperV<AzKantaiEntity>()\n        .eq(AzKantaiEntity::getName, azKantaiDto.getName()));\nif (Objects.nonNull(one) && !Objects.equals(one.getId(), dtoId)) {\n    throw new AzurSearchException(ExceptionEnum.Name_DULICATION.getResultCode(),      ExceptionEnum.Name_DULICATION.getResultMsg());\n}\n```\n\n先根据名称查询到这个对象\n\n当为空的时候跳过判断\n\n不为空时，判断其id 和传过来的id 比较，相同表示是修改允许重名，不同则抛出异常","tags":["技术","java"]},{"title":"序列化问题","url":"/2024/11/29/关于ObjectMapper/","content":"\n\n\n\n\n\n\n序列化是会自动序列化以下内容：\n\n**类的默认构造函数**：如果你使用了 `@JsonIgnoreProperties` 或者其他 Jackson 的注解，或者类中包含了额外的字段（例如继承的父类字段），可能会导致序列化时包括这些字段。\n\n**父类的字段**：如果你的类继承了某个父类，并且父类中有字段，Jackson 默认会序列化父类的字段，即使它们不在子类中。\n\n**Getter/Setter 方法**：Jackson 会通过 getter 方法推断要序列化的字段。如果你的类中存在不希望序列化的额外字段，但是它有对应的 getter 方法，Jackson 也可能会序列化这些字段。\n\n**Jackson 默认行为**：Jackson 默认会序列化所有 public 或通过 getter 方法暴露的字段。即使你只有一个字段 `Map<String, List<Edge>>`，其他字段（如果存在）可能也会被序列化。","tags":["技术","java"]},{"title":"switch踩坑","url":"/2024/11/29/switch坑/","content":"\n\n\n\n\n```java\npublic static void main(String[] args) {\n    Integer a = null;\n    switch (a) {\n        case 1:\n            System.out.println(1);\n        default:\n            System.out.println(0);\n    }\n}\n```\n\n结果\n\n```\nException in thread \"main\" java.lang.NullPointerException\n\tat te.as.main(as.java:6)\n```\n\na不能为空\n\n","tags":["技术","java"],"categories":["日常开发问题"]},{"title":"stream流为空报错","url":"/2024/11/29/stream流空/","content":"\n\n\ntoMap时不允许值为空的情况","tags":["技术","java"]},{"title":"bigdeciaml踩坑","url":"/2024/11/29/BigDecimal的坑/","content":"\n\n\n\n\n\n\n\n\n\n\n**第一：浮点类型的坑**\n\n在学习了解BigDecimal的坑之前，先来说一个老生常谈的问题：如果使用Float、Double等浮点类型进行计算时，有可能得到的是一个近似值，而不是精确的值。\n\n比如下面的代码：\n\n```\n@Test\n public void test0(){\n  float a = 1;\n  float b = 0.9f;\n  System.out.println(a - b);\n }\n```\n\n结果是多少？0.1吗？不是，执行上面代码执行的结果是0.100000024。之所以产生这样的结果，是因为0.1的二进制表示是无限循环的。由于计算机的资源是有限的，所以是没办法用二进制精确的表示 0.1，只能用「近似值」来表示，就是在有限的精度情况下，最大化接近 0.1 的二进制数，于是就会造成精度缺失的情况。\n\n关于上述的现象大家都知道，不再详细展开。同时，还会得出结论在科学计数法时可考虑使用浮点类型，但如果是涉及到金额计算要使用BigDecimal来计算。\n\n那么，BigDecimal就一定能避免上述的浮点问题吗？来看下面的示例：\n\n```\n@Test\n public void test1(){\n  BigDecimal a = new BigDecimal(0.01);\n  BigDecimal b = BigDecimal.valueOf(0.01);\n  System.out.println(\"a = \" + a);\n  System.out.println(\"b = \" + b);\n }\n```\n\n上述单元测试中的代码，a和b结果分别是什么？\n\n```\na = 0.01000000000000000020816681711721685132943093776702880859375\nb = 0.01\n```\n\n上面的实例说明，即便是使用BigDecimal，结果依旧会出现精度问题。这就涉及到创建BigDecimal对象时，如果有初始值，是采用new BigDecimal的形式，还是通过BigDecimal#valueOf方法了。\n\n之所以会出现上述现象，是因为new BigDecimal时，传入的0.1已经是浮点类型了，鉴于上面说的这个值只是近似值，在使用new BigDecimal时就把这个近似值完整的保留下来了。\n\n而BigDecimal#valueOf则不同，它的源码实现如下：\n\n```\npublic static BigDecimal valueOf(double val) {\n        // Reminder: a zero double returns '0.0', so we cannot fastpath\n        // to use the constant ZERO.  This might be important enough to\n        // justify a factory approach, a cache, or a few private\n        // constants, later.\n        return new BigDecimal(Double.toString(val));\n    }\n```\n\n在valueOf内部，使用Double#toString方法，将浮点类型的值转换成了字符串，因此就不存在精度丢失问题了。\n\n此时就得出一个基本的结论：第一，在使用BigDecimal构造函数时，尽量传递字符串而非浮点类型；第二，如果无法满足第一条，则可采用BigDecimal#valueOf方法来构造初始化值。\n\n这里延伸一下，BigDecimal常见的构造方法有如下几种：\n\n```\nBigDecimal(int)       创建一个具有参数所指定整数值的对象。\nBigDecimal(double)    创建一个具有参数所指定双精度值的对象。\nBigDecimal(long)      创建一个具有参数所指定长整数值的对象。\nBigDecimal(String)    创建一个具有参数所指定以字符串表示的数值的对象。\n```\n\n其中涉及到参数类型为double的构造方法，会出现上述的问题，使用时需特别留意。\n\n**第二：浮点精度的坑**\n\n如果比较两个BigDecimal的值是否相等，你会如何比较？使用equals方法还是compareTo方法呢？\n\n先来看一个示例：\n\n```\n@Test\n public void test2(){\n  BigDecimal a = new BigDecimal(\"0.01\");\n  BigDecimal b = new BigDecimal(\"0.010\");\n  System.out.println(a.equals(b));\n  System.out.println(a.compareTo(b));\n }\n```\n\n乍一看感觉可能相等，但实际上它们的本质并不相同。\n\nequals方法是基于BigDecimal实现的equals方法来进行比较的，直观印象就是比较两个对象是否相同，那么代码是如何实现的呢？\n\n```\n@Override\n    public boolean equals(Object x) {\n        if (!(x instanceof BigDecimal))\n            return false;\n        BigDecimal xDec = (BigDecimal) x;\n        if (x == this)\n            return true;\n        if (scale != xDec.scale)\n            return false;\n        long s = this.intCompact;\n        long xs = xDec.intCompact;\n        if (s != INFLATED) {\n            if (xs == INFLATED)\n                xs = compactValFor(xDec.intVal);\n            return xs == s;\n        } else if (xs != INFLATED)\n            return xs == compactValFor(this.intVal);\n\n        return this.inflated().equals(xDec.inflated());\n    }\n```\n\n仔细阅读代码可以看出，equals方法不仅比较了值是否相等，还比较了精度是否相同。上述示例中，由于两者的精度不同，所以equals方法的结果当然是false了。而compareTo方法实现了Comparable接口，真正比较的是值的大小，返回的值为-1（小于），0（等于），1（大于）。\n\n基本结论：通常情况，如果比较两个BigDecimal值的大小，采用其实现的compareTo方法；如果严格限制精度的比较，那么则可考虑使用equals方法。\n\n另外，这种场景在比较0值的时候比较常见，比如比较BigDecimal(\"0\")、BigDecimal(\"0.0\")、BigDecimal(\"0.00\")，此时一定要使用compareTo方法进行比较。\n\n**第三：设置精度的坑**\n\n在项目中看到好多同学通过BigDecimal进行计算时不设置计算结果的精度和舍入模式，真是着急人，虽然大多数情况下不会出现什么问题。但下面的场景就不一定了：\n\n```\n@Test\n public void test3(){\n  BigDecimal a = new BigDecimal(\"1.0\");\n  BigDecimal b = new BigDecimal(\"3.0\");\n  a.divide(b);\n }\n```\n\n执行上述代码的结果是什么？ArithmeticException异常！\n\n```\njava.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.\n\n at java.math.BigDecimal.divide(BigDecimal.java:1690)\n ...\n```\n\n这个异常的发生在官方文档中也有说明：\n\nIf the quotient has a nonterminating decimal expansion and the operation is specified to return an exact result, an ArithmeticException is thrown. Otherwise, the exact result of the division is returned, as done for other operations.\n\n总结一下就是，如果在除法（divide）运算过程中，如果商是一个无限小数（0.333…），而操作的结果预期是一个精确的数字，那么将会抛出ArithmeticException异常。\n\n此时，只需在使用divide方法时指定结果的精度即可：\n\n```\n@Test\n public void test3(){\n  BigDecimal a = new BigDecimal(\"1.0\");\n  BigDecimal b = new BigDecimal(\"3.0\");\n  BigDecimal c = a.divide(b, 2,RoundingMode.HALF_UP);\n  System.out.println(c);\n }\n```\n\n执行上述代码，输入结果为0.33。\n\n基本结论：在使用BigDecimal进行（所有）运算时，一定要明确指定精度和舍入模式。\n\n拓展一下，舍入模式定义在RoundingMode枚举类中，共有8种：\n\nRoundingMode.UP：舍入远离零的舍入模式。在丢弃非零部分之前始终增加数字(始终对非零舍弃部分前面的数字加1)。注意，此舍入模式始终不会减少计算值的大小。\n\nRoundingMode.DOWN：接近零的舍入模式。在丢弃某部分之前始终不增加数字(从不对舍弃部分前面的数字加1，即截短)。注意，此舍入模式始终不会增加计算值的大小。\n\nRoundingMode.CEILING：接近正无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUNDUP 相同;如果为负，则舍入行为与 ROUNDDOWN 相同。注意，此舍入模式始终不会减少计算值。\n\nRoundingMode.FLOOR：接近负无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUNDDOWN 相同;如果为负，则舍入行为与 ROUNDUP 相同。注意，此舍入模式始终不会增加计算值。\n\nRoundingMode.HALF_UP：向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为向上舍入的舍入模式。如果舍弃部分 >= 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同。注意，这是我们在小学时学过的舍入模式(四舍五入)。\n\nRoundingMode.HALF_DOWN：向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为上舍入的舍入模式。如果舍弃部分 > 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同(五舍六入)。\n\nRoundingMode.HALF_EVEN：向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则向相邻的偶数舍入。如果舍弃部分左边的数字为奇数，则舍入行为与 ROUNDHALFUP 相同;如果为偶数，则舍入行为与 ROUNDHALF_DOWN 相同。注意，在重复进行一系列计算时，此舍入模式可以将累加错误减到最小。此舍入模式也称为“银行家舍入法”，主要在美国使用。四舍六入，五分两种情况。如果前一位为奇数，则入位，否则舍去。以下例子为保留小数点1位，那么这种舍入方式下的结果。1.15 ==> 1.2 ,1.25 ==> 1.2\n\nRoundingMode.UNNECESSARY：断言请求的操作具有精确的结果，因此不需要舍入。如果对获得精确结果的操作指定此舍入模式，则抛出ArithmeticException。\n\n通常我们使用的四舍五入即RoundingMode.HALF_UP。\n\n**第四：三种字符串输出的坑**\n\n先来看看下面的代码：\n\n```\n@Test\npublic void test4(){\n  BigDecimal a = BigDecimal.valueOf(35634535255456719.22345634534124578902);\n  System.out.println(a.toString());\n}\n```\n\n执行的结果是上述对应的值吗？并不是：\n\n```\n3.563453525545672E+16\n```\n\n也就是说，本来想打印字符串的，结果打印出来的是科学计数法的值。\n\n这里我们需要了解BigDecimal转换字符串的三个方法\n\n- toPlainString()：不使用任何科学计数法；\n- toString()：在必要的时候使用科学计数法；\n- toEngineeringString() ：在必要的时候使用工程计数法。类似于科学计数法，只不过指数的幂都是3的倍数，这样方便工程上的应用，因为在很多单位转换的时候都是10^3；\n\n三种方法展示结果示例如下：\n\n![图片](https://s2.51cto.com/oss/202207/19/77592430783a4f9a11b034817a4c552e6f0152.jpg)\n\n计算法\n\n基本结论：**根据数据结果展示格式不同，采用不同的字符串输出方法，通常使用比较多的方法为toPlainString()**。\n\n另外，NumberFormat类的format()方法可以使用BigDecimal对象作为其参数，可以利用BigDecimal对超出16位有效数字的货币值，百分值，以及一般数值进行格式化控制。\n\n使用示例如下：\n\n```\nNumberFormat currency = NumberFormat.getCurrencyInstance(); //建立货币格式化引用\nNumberFormat percent = NumberFormat.getPercentInstance();  //建立百分比格式化引用\npercent.setMaximumFractionDigits(3); //百分比小数点最多3位\n\nBigDecimal loanAmount = new BigDecimal(\"15000.48\"); //金额\nBigDecimal interestRate = new BigDecimal(\"0.008\"); //利率\nBigDecimal interest = loanAmount.multiply(interestRate); //相乘\n\nSystem.out.println(\"金额:\\t\" + currency.format(loanAmount));\nSystem.out.println(\"利率:\\t\" + percent.format(interestRate));\nSystem.out.println(\"利息:\\t\" + currency.format(interest));\n```\n\n输出结果如下：\n\n```\n金额: ￥15,000.48 \n利率: 0.8% \n利息: ￥120.00\n```","tags":["技术","java"]},{"url":"/2024/11/29/@RequestParam注意/","content":"默认 required属性为true"},{"title":"博丽神庙","url":"/2024/11/28/df/","content":"\n![屏幕截图 2024-07-16 205709](df/屏幕截图 2024-07-16 205709.png)\n\n这个是图片","tags":["acg","幻想乡"]},{"url":"/2024/11/28/知识点1存储/","content":"# 知识点\n\n加密明文密码然后将其存储\n\nBCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\nString password = passwordEncoder.encode(memberRegisterVo.getPassword());\nmember.setPassword(password);\n\n\n\n\n\n## spring框架\n\n![image-20231121114103655](C:\\Users\\nar94\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231121114103655.png)\n\n![image-20231121125838299](C:\\Users\\nar94\\AppData\\Roaming\\Typora\\typora-user-images\\image-20231121125838299.png)"},{"url":"/2024/11/28/注解/","content":"1. **`@RestController`注解**：\n\n   - `@RestController` 是一个组合注解，它是`@Controller`和`@ResponseBody`的组合。它表明这个类是一个控制器，并且每个方法的返回值都会被自动转换为JSON格式的响应。\n   - 这与普通的`@Controller`注解不同，后者默认期望视图解析器来解析返回的字符串作为视图名，而`@RestController`直接将返回值写入HTTP响应体。\n\n2. **`@RequestMapping(\"/voucher-order\")`注解**：\n\n   - `@RequestMapping` 用于映射HTTP请求路径，将指定的路径与控制器或控制器方法关联起来。在这里，控制器上的`@RequestMapping(\"/voucher-order\")`表示所有方法的基本路径都是`/voucher-order`。\n\n3. `@PathVariable` 用于提取 URI 模板中的值。\n\n   @GetMapping(\"/users/{userId}\")\n   public ResponseEntity<User> getUserById(@PathVariable Long userId) {\n       // 处理逻辑\n   }\n\n4. `@RequestParam` 用于获取查询参数的值。\n\n   @GetMapping(\"/users\")\n   public ResponseEntity<User> getUserByName(@RequestParam String name) {\n       // 处理逻辑\n   }\n\n5. `@RequestBody` 用于获取请求体中的数据\n\n   @PostMapping(\"/users\")\n   public ResponseEntity<User> createUser(@RequestBody User user) {\n       // 处理逻辑\n   }"},{"url":"/2024/11/28/注入的循环依赖问题/","content":"循环依赖指的是两个或多个 bean 彼此之间相互依赖，形成了一个循环的依赖关系。在 Spring 中，循环依赖是一种需要特别注意的情况，因为如果处理不当，可能会导致应用程序启动失败或者出现运行时的问题。以下是一个简单的循环依赖的例子及其解决方法：\n\n### 示例：循环依赖\n\n假设有两个服务类 `ServiceA` 和 `ServiceB`，彼此互相依赖：\n\n```\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceA {\n\n    private final ServiceB serviceB;\n\n    @Autowired\n    public ServiceA(ServiceB serviceB) {\n        this.serviceB = serviceB;\n    }\n}\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceB {\n\n    private final ServiceA serviceA;\n\n    @Autowired\n    public ServiceB(ServiceA serviceA) {\n        this.serviceA = serviceA;\n    }\n}\n```\n\n在这个例子中，`ServiceA` 类依赖 `ServiceB` 类，而 `ServiceB` 类又依赖 `ServiceA` 类，形成了循环依赖。\n\n\n\n\n\n解决方案：\n\n​\t**构造函数注入改为字段注入**：\n\n将构造函数注入改为字段注入可以避免循环依赖问题，因为字段注入发生在对象实例化后，不会出现循环等待的情况。\n\n```\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceA {\n\n    @Autowired\n    private ServiceB serviceB;\n}\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceB {\n\n    @Autowired\n    private ServiceA serviceA;\n}\n```\n\n**使用 `@Lazy` 注解**：\n\n可以使用 `@Lazy` 注解延迟加载 bean，以避免立即初始化并解决循环依赖问题。\n\n```\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Lazy;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceA {\n\n    private final ServiceB serviceB;\n\n    @Autowired\n    public ServiceA(@Lazy ServiceB serviceB) {\n        this.serviceB = serviceB;\n    }\n}\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Lazy;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceB {\n\n    private final ServiceA serviceA;\n\n    @Autowired\n    public ServiceB(@Lazy ServiceA serviceA) {\n        this.serviceA = serviceA;\n    }\n}\n```\n\n**使用 setter 方法注入**：\n\n将依赖关系通过 setter 方法注入，然后使用 `@Autowired` 和 `@Lazy` 注解来解决循环依赖问题。\n\n```\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Lazy;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceA {\n\n    private ServiceB serviceB;\n\n    @Autowired\n    public void setServiceB(@Lazy ServiceB serviceB) {\n        this.serviceB = serviceB;\n    }\n}\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Lazy;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceB {\n\n    private ServiceA serviceA;\n\n    @Autowired\n    public void setServiceA(@Lazy ServiceA serviceA) {\n        this.serviceA = serviceA;\n    }\n}\n```\n\n **使用 `@Autowired` 和 `@Qualifier` 注解**\n\n结合 `@Autowired` 和 `@Qualifier` 注解，可以精确指定要注入的 bean。这种方法可以帮助 Spring 解析循环依赖。\n\n#### 示例：\n\n```\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceA {\n\n    private final ServiceB serviceB;\n\n    @Autowired\n    public ServiceA(@Qualifier(\"serviceB\") ServiceB serviceB) {\n        this.serviceB = serviceB;\n    }\n}\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceB {\n\n    private final ServiceA serviceA;\n\n    @Autowired\n    public ServiceB(@Qualifier(\"serviceA\") ServiceA serviceA) {\n        this.serviceA = serviceA;\n    }\n}\n```\n\n在这个示例中，通过 `@Qualifier` 注解指定了要注入的具体 bean 的名称，从而帮助 Spring 正确解析循环依赖。\n\n**使用 `@PostConstruct` 方法**\n\n可以在一个 bean 的初始化方法中手动设置另一个 bean 的依赖。`@PostConstruct` 注解可以用来标记初始化方法，在 bean 的依赖注入完成后调用。\n\n#### 示例：\n\n```\njava复制代码import javax.annotation.PostConstruct;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceA {\n\n    private ServiceB serviceB;\n\n    @Autowired\n    private ServiceB serviceBProxy;\n\n    @PostConstruct\n    public void init() {\n        this.serviceB = serviceBProxy;\n    }\n}\njava复制代码import javax.annotation.PostConstruct;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ServiceB {\n\n    private ServiceA serviceA;\n\n    @Autowired\n    private ServiceA serviceAProxy;\n\n    @PostConstruct\n    public void init() {\n        this.serviceA = serviceAProxy;\n    }\n}\n```\n\n在这个示例中，通过在 **`ServiceA`** 和 `ServiceB` 类中分别注入对方的代理对象，并在 `@PostConstruct` 方法中设置真正的依赖，从而解决循环依赖的问题。\n\n**原理**：\n\n在 Spring 框架中，当处理循环依赖时，Spring 会利用代理对象来解决依赖注入的问题。具体来说，Spring 在处理循环依赖时会有以下几种情况：\n\n1. **普通情况下的注入**：\n   - 当没有循环依赖时，`@Autowired` 注解会直接将实际的 bean 实例注入到目标对象中。\n2. **循环依赖的处理**：\n   - 当存在循环依赖时，Spring 会采用提前暴露（early exposure）的策略。这意味着在一个 bean 还没有完全初始化时，Spring 可能会先暴露一个未完全初始化的代理对象给依赖它的其他 bean。\n3. **代理对象的标识**：\n   - Spring 为了区分实际 bean 和代理对象，在代理对象上通常会实现特定的接口，如 `org.springframework.aop.SpringProxy` 或 `org.springframework.aop.framework.Advised`。这些接口可以用来检查一个对象是否是代理对象。\n\n```java\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.aop.SpringProxy;\nimport org.springframework.aop.framework.Advised;\n\n\n@Service\npublic class ServiceC {\nprivate ServiceA serviceA;\n\n@Autowired\nprivate ServiceA serviceAProxy;\n\npublic void checkProxy() {\n    if (serviceAProxy instanceof SpringProxy) {\n        System.out.println(\"serviceAProxy is a Spring proxy\");\n    }\n\n    if (serviceAProxy instanceof Advised) {\n        System.out.println(\"serviceAProxy is Advised\");\n    }\n }\n}\n```\n\n\n\n\n\n\n**使用 `@DependsOn` 注解**\n\n可以使用 `@DependsOn` 注解来指定 bean 的创建顺序，从而帮助 Spring 正确处理循环依赖。\n\n#### 示例：\n\n```\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.DependsOn;\nimport org.springframework.stereotype.Service;\n\n@Service\n@DependsOn(\"serviceB\")\npublic class ServiceA {\n\n    private final ServiceB serviceB;\n\n    @Autowired\n    public ServiceA(ServiceB serviceB) {\n        this.serviceB = serviceB;\n    }\n}\njava复制代码import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.DependsOn;\nimport org.springframework.stereotype.Service;\n\n@Service\n@DependsOn(\"serviceA\")\npublic class ServiceB {\n\n    private final ServiceA serviceA;\n\n    @Autowired\n    public ServiceB(ServiceA serviceA) {\n        this.serviceA = serviceA;\n    }\n}\n```\n\n在这个示例中，通过 `@DependsOn` 注解显式指定 bean 的依赖顺序，确保 `ServiceA` 在 `ServiceB` 之后创建，从而解决循环依赖的问题。"},{"url":"/2024/11/28/StpUtil/","content":"# StpUtil\n\n```\n<!-- Sa-Token 权限认证 -->\n<dependency>\n    <groupId>cn.dev33</groupId>\n    <artifactId>sa-token-spring-boot-starter</artifactId>\n    <version>${sa-token.version}</version>\n</dependency>\n```\n\n1. **Token 认证：** 提供了通过 Token 进行身份认证的功能。sa-token 使用 Token 来标识用户身份，可以通过配置启用或禁用 Token 认证。\n2. **Session 管理：** 支持基于 Session 的会话管理。可以配置 Session 的过期时间、定时清理等相关参数。\n3. **角色和权限控制：** 提供了简单易用的角色和权限控制机制。可以通过注解或 API 进行角色和权限的验证。\n4. **自定义登录认证逻辑：** 允许用户自定义登录认证逻辑，以适应不同的身份验证需求。\n5. **多端登录管理：** 支持多端登录，可以限制同一账号在多少个终端登录。\n6. **黑名单、白名单管理：** 支持用户的黑名单和白名单功能，可以灵活控制用户的访问权限。\n7. **记住我功能：** 支持记住我功能，使用户在一段时间内免登录。\n8. **多Realm支持：** 支持配置多个 Realm，用于不同类型的用户认证。\n9. **会话治理：** 提供了一些会话治理的相关功能，例如强制踢出登录等。\n10. **在线会话查看：** 提供了在线用户会话查看的功能，可以查看当前在线的用户信息。\n11. **事件监听器：** 支持事件监听器，可以监听 sa-token 的各种事件，进行自定义处理。"},{"url":"/2024/11/28/RequestMappingInfo/","content":"**RequestMappingHandlerMapping**是Spring MVC HandlerMapping的一个实现，**主要用于针对控制器类(带有注解@Controller)中类级别或者方法级别的注解@RequestMapping创建RequestMappingInfo并管理。**\n\nRequestMappingHandlerMapping工作原理大致是这样的 :\n\n应用启动阶段\nRequestMappingHandlerMapping实现了接口InitializingBean,它的初始化方法会设置各种工作参数，并检测容器中所有的控制器方法并将它们登记管理起来。针对每个使用注解@RequestMapping的控制器方法所生成的请求匹配条件是一个RequestMappingInfo对象，最终所被管理的是一个HandlerMethod对象。\n运行时\n当一个请求到达时，RequestMappingHandlerMapping会被DispatcherServlet用于匹配一个HandlerMethod并最终调用它处理该请求。匹配的依据是当前请求中的路径信息和RequestMappingHandlerMapping所管理的每个控制器方法的RequestMappingInfo请求匹配条件。\n\n"},{"title":"jwt令牌","url":"/2024/11/28/jwt/","content":"\n\n\n\n\njwt\n\n```\nxxxxx.yyyyy.zzzzz\n```\n\n- `xxxxx` 是头部（Header）\n- 报头通常由两部分组成: Token的类型(即 JWT)和所使用的签名算法(如 HMAC SHA256或 RSA)。\n- `yyyyy` 是负载（Payload）\n- Token的第二部分是有效负载，其中包含声明。声明是关于实体(通常是用户)和其他数据的语句。有三种类型的声明: registered claims, public claims, and private claims\n- `zzzzz` 是签名（Signature）\n\n> 要创建Signature，您必须获取编码的标头（header）、编码的有效载荷(payload)、secret、标头中指定的算法，并对其进行签名\n\n客户端发送登入请求   \n\n服务端接受验证后 使用sercret加盐后发送jwt令牌\n\n客户端接受令牌 发送请求时携带jwt令牌 \n\n服务端验证令牌 正确后返回结果\n\n\n\n```\n     <!--JWT(Json Web Token)登录支持-->\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt</artifactId>\n            <version>0.9.1</version>\n        </dependency>\n```\n\n```\n        // JWT头部分信息【Header】\n        Map<String, Object> header = new HashMap<>();\n        header.put(\"alg\", \"HS256\");\n        header.put(\"typ\", \"JWT\");\n\n        // 载核【Payload】\n        Map<String, Object> payload = new HashMap<>();\n        payload.put(\"sub\", \"1234567890\");\n        payload.put(\"name\",\"John Doe\");\n        payload.put(\"admin\",true);\n\n        // 声明Token失效时间\n        Calendar instance = Calendar.getInstance();\n        instance.add(Calendar.SECOND,300);// 300s\n\n        // 生成Token\n        String token = Jwts.builder()\n                .setHeader(header)// 设置Header\n                .setClaims(payload) // 设置载核\n                .setExpiration(instance.getTime())// 设置生效时间\n                .signWith(SignatureAlgorithm.HS256,\"secret\") // 签名,这里采用私钥进行签名,不要泄露了自己的私钥信息\n                .compact(); // 压缩生成xxx.xxx.xxx\n\n        System.out.println(token);\n```\n\n```\n      // 生成的token\n        String token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2MzI5NzQzMX0.Ju5EzKBpUnuIRhDG1SU0NwMGsd9Jl_8YBcMM6PB2C20\";\n        // 解析head信息\n        JwsHeader jwsHeader = Jwts\n                .parser()\n                .setSigningKey(\"secret\")\n                .parseClaimsJws(token)\n                .getHeader();\n\n        System.out.println(jwsHeader); // {typ=JWT, alg=HS256}\n        System.out.println(\"typ:\"+jwsHeader.get(\"typ\"));\n\n        // 解析Payload\n     Claims claims =    Jwts\n                .parser()\n                .setSigningKey(\"secret\")\n                .parseClaimsJws(token)\n                .getBody();\n        System.out.println(claims);// {sub=1234567890, name=John Doe, admin=true, exp=1663297431}\n        System.out.println(\"admin:\"+claims.get(\"admin\"));\n\n        // 解析Signature\n     String signature =    Jwts\n                .parser()\n                .setSigningKey(\"secret\")\n                .parseClaimsJws(token)\n                .getSignature();\n        System.out.println(signature); // Ju5EzKBpUnuIRhDG1SU0NwMGsd9Jl_8YBcMM6PB2C20\n```","tags":["技术","网络协议"]},{"url":"/2024/11/28/jdk动态代理/","content":"jdk动态代理只能代理接口"},{"url":"/2024/11/28/@PointCut/","content":"网上查dsad"},{"title":"Accessors注解","url":"/2024/11/28/@Accessors/","content":"\n\n\n\n\n### @Accessors\n\n####  fluent 属性\n\n> 不写默认为false，当该值为 true 时，对应字段的 getter 方法前面就没有 get，setter 方法就不会有 set。\n\n#### chain 属性\n\n> 不写默认为false，当该值为 true 时，对应字段的 setter 方法调用后，会返回当前对象。\n\n#### prefix 属性\n\n> 该属性是一个字符串数组，当该数组有值时，表示忽略字段中对应的前缀，生成对应的 getter 和 setter 方法。","tags":["技术","spring","java"]}]